增insert into
insert into table_name (column_name1, column_name2, ...column_nameN) values (value1, value2, ...valueN);

删delete
delete from table_name [where condition]
如果没有指定 WHERE 子句，MySQL 表中的所有记录将被删除。
delete from students where age<20;

改
#更新update
update table_name set a = '3' where a = '4' and b = '5';
update tbl_cell set bts_id = (select id from tbl_bts where btsid = 9045) where cellname regexp "9045";

查select
select column_nameN from table_name where column_name = value;
limit设定返回的记录数
offset设定select语句开始查询的数据偏移量，默认偏移量为0
regexp匹配正则表达式
SELECT * FROM table_name where name regexp "5060";

select * from table_name where a=value;

select a,b from table_name where a=value;

select * from table_name;

select a,b from table_name;
#降序
select * from table_name order by a desc;

#升序
select * from table_name order by a asc;

select column_name1, column_name2, column_nameN from table_name1, table_name2, ... where condition1 [and | or] condition2 ...
查询语句中可以使用一个或者多个表，表之间使用逗号分割，并使用WHERE语句来设定查询条件。
where子句也可以运用于 SQL 的 delete 或者 update 命令
MySQL中where子句的字符串比较是不区分大小写的。 可以使用binary关键字来设定where子句的字符串比较是区分大小写的.
select * from table_name where binary column_name = "com";
select * from table_name where binary column_name = "COM";

查询name重复的记录
select tbl_name.name,count(*) as count from tbl_name group by test.tbl_name.name having count >1;


where：数据库中常用的是where关键字，用于在初始表中筛选查询。它是一个约束声明，用于约束数据，在返回结果集之前起作用。
group by:对select查询出来的结果集按照某个字段或者表达式进行分组，获得一组组的集合，然后从每组中取出一个指定字段或者表达式的值。
having：用于对where和group by查询出来的分组经行过滤，查出满足条件的分组结果。它是一个过滤声明，是在查询返回结果集以后对查询结果进行的过滤操作。
执行顺序
FROM, including JOINs
WHERE
GROUP BY
HAVING
WINDOW functions
SELECT
DISTINCT
UNION
ORDER BY
LIMIT and OFFSET
